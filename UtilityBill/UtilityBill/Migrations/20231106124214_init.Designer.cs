// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UtilityBill.Data;

#nullable disable

namespace UtilityBill.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231106124214_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UtilityBill.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("PinCode")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("UtilityBill.ApplicationDetail", b =>
                {
                    b.Property<int>("ApplicationDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ApplicationDetailId"));

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ApplicationStatus")
                        .HasColumnType("text");

                    b.Property<string>("ConnectionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MeterDetailMeterId")
                        .HasColumnType("integer");

                    b.Property<string>("RequiredLoad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ApplicationDetailId");

                    b.HasIndex("MeterDetailMeterId");

                    b.ToTable("ApplicationDetail");
                });

            modelBuilder.Entity("UtilityBill.BillDetail", b =>
                {
                    b.Property<int>("BillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BillDetailId"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BillStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MeterDetailMeterId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalBill")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitsConsumed")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("BillDetailId");

                    b.HasIndex("MeterDetailMeterId");

                    b.HasIndex("UserId");

                    b.ToTable("BillDetail");
                });

            modelBuilder.Entity("UtilityBill.MeterDetail", b =>
                {
                    b.Property<int>("MeterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MeterId"));

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("MeterId");

                    b.ToTable("MeterDetail");
                });

            modelBuilder.Entity("UtilityBill.TicketDetail", b =>
                {
                    b.Property<int>("TicketDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TicketDetailId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("TicketDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("TicketDetail");
                });

            modelBuilder.Entity("UtilityBill.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int?>("ApplicationDetailId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ApplicationDetailId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UtilityBill.ApplicationDetail", b =>
                {
                    b.HasOne("UtilityBill.MeterDetail", "MeterDetail")
                        .WithMany()
                        .HasForeignKey("MeterDetailMeterId");

                    b.Navigation("MeterDetail");
                });

            modelBuilder.Entity("UtilityBill.BillDetail", b =>
                {
                    b.HasOne("UtilityBill.MeterDetail", "MeterDetail")
                        .WithMany("BillDetail")
                        .HasForeignKey("MeterDetailMeterId");

                    b.HasOne("UtilityBill.User", "User")
                        .WithMany("BillDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeterDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UtilityBill.TicketDetail", b =>
                {
                    b.HasOne("UtilityBill.User", "User")
                        .WithMany("TicketDetail")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UtilityBill.User", b =>
                {
                    b.HasOne("UtilityBill.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UtilityBill.ApplicationDetail", "ApplicationDetail")
                        .WithMany()
                        .HasForeignKey("ApplicationDetailId");

                    b.Navigation("Address");

                    b.Navigation("ApplicationDetail");
                });

            modelBuilder.Entity("UtilityBill.MeterDetail", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("UtilityBill.User", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("TicketDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
